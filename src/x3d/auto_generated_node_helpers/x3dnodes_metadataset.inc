{ -*- buffer-read-only: t -*-

  Copyright 2015-2018 Michalis Kamburelis.

  This file is part of "Castle Game Engine".

  "Castle Game Engine" is free software; see the file COPYING.txt,
  included in this distribution, for details about the copyright.

  "Castle Game Engine" is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.

  ----------------------------------------------------------------------------
}

{ Automatically generated node properties.

  Do not edit this file manually!
  To add new properties:
  - add them to the text files in tools/internal/x3d-nodes-to-pascal/nodes-specification/ ,
  - and regenerate include files by running x3d-nodes-to-pascal .

  The documentation for properties should go to x3dnodes_documentation.txt . }

{$ifdef read_interface}

  strict private
    function GetNameField: string;
    procedure SetNameField(const Value: string);
    function GetReference: string;
    procedure SetReference(const Value: string);
  public
    { X3D field "name". } { }
    property NameField: string read GetNameField write SetNameField;
    { X3D field "reference". } { }
    property Reference: string read GetReference write SetReference;

{$endif read_interface}

{$ifdef read_implementation}

{ TMetadataSetNode ----------------------------------------------- }

function TMetadataSetNode.GetNameField: string;
begin
  Result := FdName.Value;
end;

procedure TMetadataSetNode.SetNameField(const Value: string);
begin
  FdName.Send(Value);
end;

function TMetadataSetNode.GetReference: string;
begin
  Result := FdReference.Value;
end;

procedure TMetadataSetNode.SetReference(const Value: string);
begin
  FdReference.Send(Value);
end;

{$endif read_implementation}
