{ -*- buffer-read-only: t -*-

  Copyright 2015-2018 Michalis Kamburelis.

  This file is part of "Castle Game Engine".

  "Castle Game Engine" is free software; see the file COPYING.txt,
  included in this distribution, for details about the copyright.

  "Castle Game Engine" is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.

  ----------------------------------------------------------------------------
}

{ Automatically generated node properties.

  Do not edit this file manually!
  To add new properties:
  - add them to the text files in tools/internal/x3d-nodes-to-pascal/nodes-specification/ ,
  - and regenerate include files by running x3d-nodes-to-pascal .

  The documentation for properties should go to x3dnodes_documentation.txt . }

{$ifdef read_interface}

  strict private
    function GetTitle: string;
    procedure SetTitle(const Value: string);
  public
    { Set X3D field "info". } { }
    procedure SetInfo(const Value: array of string);
    { Set X3D field "info". } { }
    procedure SetInfo(const Value: TCastleStringList);
    { X3D field "title". } { }
    property Title: string read GetTitle write SetTitle;

{$endif read_interface}

{$ifdef read_implementation}

{ TWorldInfoNode ----------------------------------------------- }

procedure TWorldInfoNode.SetInfo(const Value: array of string);
begin
  FdInfo.Send(Value);
end;

procedure TWorldInfoNode.SetInfo(const Value: TCastleStringList);
begin
  FdInfo.Send(Value);
end;

function TWorldInfoNode.GetTitle: string;
begin
  Result := FdTitle.Value;
end;

procedure TWorldInfoNode.SetTitle(const Value: string);
begin
  FdTitle.Send(Value);
end;

{$endif read_implementation}
