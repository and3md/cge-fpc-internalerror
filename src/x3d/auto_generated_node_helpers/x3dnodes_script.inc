{ -*- buffer-read-only: t -*-

  Copyright 2015-2018 Michalis Kamburelis.

  This file is part of "Castle Game Engine".

  "Castle Game Engine" is free software; see the file COPYING.txt,
  included in this distribution, for details about the copyright.

  "Castle Game Engine" is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.

  ----------------------------------------------------------------------------
}

{ Automatically generated node properties.

  Do not edit this file manually!
  To add new properties:
  - add them to the text files in tools/internal/x3d-nodes-to-pascal/nodes-specification/ ,
  - and regenerate include files by running x3d-nodes-to-pascal .

  The documentation for properties should go to x3dnodes_documentation.txt . }

{$ifdef read_interface}

  strict private
    function GetDirectOutput: boolean;
    procedure SetDirectOutput(const Value: boolean);
    function GetMustEvaluate: boolean;
    procedure SetMustEvaluate(const Value: boolean);
  public
    { X3D field "directOutput". } { }
    property DirectOutput: boolean read GetDirectOutput write SetDirectOutput;
    { X3D field "mustEvaluate". } { }
    property MustEvaluate: boolean read GetMustEvaluate write SetMustEvaluate;

{$endif read_interface}

{$ifdef read_implementation}

{ TScriptNode ----------------------------------------------- }

function TScriptNode.GetDirectOutput: boolean;
begin
  Result := FdDirectOutput.Value;
end;

procedure TScriptNode.SetDirectOutput(const Value: boolean);
begin
  FdDirectOutput.Send(Value);
end;

function TScriptNode.GetMustEvaluate: boolean;
begin
  Result := FdMustEvaluate.Value;
end;

procedure TScriptNode.SetMustEvaluate(const Value: boolean);
begin
  FdMustEvaluate.Send(Value);
end;

{$endif read_implementation}
